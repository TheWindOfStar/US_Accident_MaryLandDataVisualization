View(US_Accidents_Dec21)
View(Maryland_CandV)
runApp('D:/All course documents/S2 2022/FIT5147/Ass_reference/DVP')
esquisse:::esquisser()
esquisse:::esquisser()
setwd("D:/All course documents/S2 2022/FIT5147/Final_DVP")
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(packcircles)
library(viridis)
library(shiny)
library(leaflet)
Maryland_CandV <- read_csv("Union_Maryland_CrashANDViolation.csv")
US_Accidents_Dec21 <- read_csv("US_Accidents_Dec21_updated_cleaned.csv")
US_Accidient_UpdatedTime <- US_Accidents_Dec21 %>% mutate(Start_Time_Year = year(Start_Time)) %>%
mutate(Start_Time_Month = month(Start_Time)) %>% mutate(Start_Time_Day = day(Start_Time))
View(US_Accidents_Dec21)
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(packcircles)
library(viridis)
library(shiny)
library(leaflet)
library(stringr)
library(lubridate)
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(packcircles)
library(viridis)
library(shiny)
library(leaflet)
library(stringr)
library(lubridate)
Maryland_CandV <- read_csv("Union_Maryland_CrashANDViolation.csv")
US_Accidents_Dec21 <- read_csv("US_Accidents_Dec21_updated_cleaned.csv")
US_Accidient_UpdatedTime <- US_Accidents_Dec21 %>% mutate(Start_Time_Year = year(Start_Time)) %>%
mutate(Start_Time_Month = month(Start_Time)) %>% mutate(Start_Time_Day = day(Start_Time))
US_selectedTimeCount <- US_Accidient_UpdatedTime %>%
select(ID, Start_Time_Year, End_Lat, End_Lng, City, County, State) %>% filter(Start_Time_Year == "2021") %>%
group_by(State) %>% count("Accidient_Count_By_State")
#Bar chart 1, state and the amount of itself.
Chart1 <- ggplot(US_selectedTimeCount) +
aes(x = State, y = n) +
geom_col(fill = "#D69648") +
labs(
x = "The name of state",
y = "Amount",
title = "Amount of accidient by selected year",
caption = "Tips: You can select the domain of year by moving slider"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 24L,
face = "bold",
hjust = 0.5),
plot.caption = element_text(size = 12L),
axis.title.y = element_text(size = 14L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
)
#US_selectedTime_By_WeatherCon <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
#  select(ID, Start_Time_Year, Start_Time_Month, Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`, )
View(US_Accidient_UpdatedTime)
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(ID, Start_Time_Year, Start_Time_Month, Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(ID, Start_Time_Year, Start_Time_Month, Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(ID, Start_Time_Year, Start_Time_Month, Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(Start_Time_Year, Start_Time_Month, Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
View(US_Accidient_UpdatedTime)
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(ID, Start_Time_Year, Start_Time_Month, Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
US_selectedTime_By_HTPV <- US_selectedTime_By_HTPV[1:100,]
View(US_selectedTime_By_HTPV)
US_selectedTime_By_HTPV <- US_selectedTime_By_HTPV[1:400,]
US_selectedTime_By_HTPV <- US_selectedTime_By_HTPV[1:500,]
US_selectedTime_By_HTPV <- US_selectedTime_By_HTPV[1:1000,]
View(US_selectedTime_By_HTPV)
View(US_selectedTime_By_HTPV)
esquisse:::esquisser()
US_selectedTime_By_HTPV <- US_selectedTime_By_HTPV[1:100,]
View(US_selectedTime_By_HTPV)
esquisse:::esquisser()
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
#  group_by(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
View(US_selectedTime_By_HTPV)
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(Start_Time_Day) %>%
count("Accidient_By_HTPV")
View(US_selectedTime_By_HTPV)
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
US_selectedTime_By_HTPV <- US_selectedTime_By_HTPV[1:100,]
View(US_selectedTime_By_HTPV)
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime[1:1000,]
View(US_selectedTime_By_HTPV)
esquisse:::esquisser()
US_selectedTime_By_WeatherCon <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, Weather_Condition) %>%
group_by(Start_Time_Day, Weather_Condition) %>%
count("Accidient_By_HTPV")
View(US_selectedTimeCount)
View(US_selectedTime_By_WeatherCon)
US_selectedTime_By_WeatherCon <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, Weather_Condition) %>%
group_by(Start_Time_Day, Weather_Condition) %>%
count("Accidient_By_WC_count")
View(US_selectedTime_By_WeatherCon)
esquisse:::esquisser()
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
US_selectedTime_By_HTPV <- US_selectedTime_By_HTPV[1:100,]
ggplot(US_selectedTime_By_HTPV, aes(x=Start_Time_Day)) +
geom_line(aes(y = `Humidity(%)`), color = "darkred") +
geom_line(aes(y = `Temperature(F)`), color="steelblue", linetype="twodash")
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(Start_Time_Day, `Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
count("Accidient_By_HTPV")
ggplot(US_selectedTime_By_HTPV, aes(x=Start_Time_Day)) +
geom_line(aes(y = `Humidity(%)`), color = "darkred") +
geom_line(aes(y = `Temperature(F)`), color="steelblue", linetype="twodash")
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(`Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(`Humidity(%)`) %>%
count("Accidient_By_HTPV1")
US_selectedTime_By_HTPV1 <- US_selectedTime_By_HTPV1[1:100,]
US_selectedTime_By_HTPV1 <- US_selectedTime_By_HTPV[1:100,]
View(US_selectedTime_By_HTPV1)
esquisse:::esquisser()
View(US_selectedTime_By_HTPV)
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(packcircles)
library(viridis)
library(shiny)
library(leaflet)
library(stringr)
library(lubridate)
Maryland_CandV <- read_csv("Union_Maryland_CrashANDViolation.csv")
US_Accidents_Dec21 <- read_csv("US_Accidents_Dec21_updated_cleaned.csv")
US_Accidient_UpdatedTime <- US_Accidents_Dec21 %>% mutate(Start_Time_Year = year(Start_Time)) %>%
mutate(Start_Time_Month = month(Start_Time)) %>% mutate(Start_Time_Day = day(Start_Time))
US_selectedTimeCount <- US_Accidient_UpdatedTime %>%
select(ID, Start_Time_Year, End_Lat, End_Lng, City, County, State) %>% filter(Start_Time_Year == "2021") %>%
group_by(State) %>% count("Accidient_Count_By_State")
#Bar chart 1, state and the amount of itself.
Chart1 <- ggplot(US_selectedTimeCount) +
aes(x = State, y = n) +
geom_col(fill = "#D69648") +
labs(
x = "The name of state",
y = "Amount",
title = "Amount of accidient by selected year",
caption = "Tips: You can select the domain of year by moving slider"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 24L,
face = "bold",
hjust = 0.5),
plot.caption = element_text(size = 12L),
axis.title.y = element_text(size = 14L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
)
US_selectedTime_By_HTPV <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(`Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(`Humidity(%)`) %>%
count("Accidient_By_HTPV1")
US_selectedTime_By_Humidity <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(`Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(`Humidity(%)`) %>%
count("Accidient_By_Humidity")
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(packcircles)
library(viridis)
library(shiny)
library(leaflet)
library(stringr)
library(lubridate)
Maryland_CandV <- read_csv("Union_Maryland_CrashANDViolation.csv")
US_Accidents_Dec21 <- read_csv("US_Accidents_Dec21_updated_cleaned.csv")
US_Accidient_UpdatedTime <- US_Accidents_Dec21 %>% mutate(Start_Time_Year = year(Start_Time)) %>%
mutate(Start_Time_Month = month(Start_Time)) %>% mutate(Start_Time_Day = day(Start_Time))
US_selectedTimeCount <- US_Accidient_UpdatedTime %>%
select(ID, Start_Time_Year, End_Lat, End_Lng, City, County, State) %>% filter(Start_Time_Year == "2021") %>%
group_by(State) %>% count("Accidient_Count_By_State")
#Bar chart 1, state and the amount of itself.
Chart1 <- ggplot(US_selectedTimeCount) +
aes(x = State, y = n) +
geom_col(fill = "#D69648") +
labs(
x = "The name of state",
y = "Amount",
title = "Amount of accidient by selected year",
caption = "Tips: You can select the domain of year by moving slider"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 24L,
face = "bold",
hjust = 0.5),
plot.caption = element_text(size = 12L),
axis.title.y = element_text(size = 14L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
)
US_selectedTime_By_Humidity <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(`Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(`Humidity(%)`) %>%
count("Accidient_By_H")
US_selectedTime_By_Temperature <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(`Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(`Temperature(F)`) %>%
count("Accidient_By_T")
US_selectedTime_By_Pressure <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(`Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(`Pressure(in)`) %>%
count("Accidient_By_P")
US_selectedTime_By_Visibility <- US_Accidient_UpdatedTime %>% filter(Start_Time_Year == "2021" && Start_Time_Month == "9" ) %>%
select(`Humidity(%)`, `Temperature(F)`, `Pressure(in)`, `Visibility(mi)`) %>%
group_by(`Visibility(mi)`) %>%
count("Accidient_By_V")
View(US_selectedTime_By_Humidity)
esquisse:::esquisser()
ggplot(US_selectedTime_By_Humidity) +
aes(x = `Humidity(%)`, y = n) +
geom_line(size = 0.5, colour = "#FF8C00") +
labs(
x = "Humidity(%)",
y = "Amount of accidient",
title = "Line Chart of Accidents and Humidity "
) +
theme_linedraw() +
theme(
plot.title = element_text(size = 21L,
face = "bold",
hjust = 0.5),
axis.title.y = element_text(size = 16L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
)
HumidityChart <- ggplot(US_selectedTime_By_Humidity) +
aes(x = `Humidity(%)`, y = n) +
geom_line(size = 0.5, colour = "#FF8C00") +
labs(
x = "Humidity(%)",
y = "Amount of accidient",
title = "Line Chart of Accidents and Humidity "
) +
theme_linedraw() +
theme(
plot.title = element_text(size = 21L,
face = "bold",
hjust = 0.5),
axis.title.y = element_text(size = 16L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
)
View(US_selectedTime_By_Pressure)
esquisse:::esquisser()
PressureChart <- ggplot(US_selectedTime_By_Pressure) +
aes(x = `Pressure(in)`, y = n) +
geom_line(size = 0.5, colour = "#0174AD") +
labs(
x = "Pressure(in)",
y = "Amount of accident",
title = "Line Chart of Accidents and Pressure"
) +
theme_linedraw() +
theme(
plot.title = element_text(size = 20L,
face = "bold",
hjust = 0.5),
axis.title.y = element_text(size = 16L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
) +
xlim(28, 31)
View(PressureChart)
View(PressureChart)
View(PressureChart)
View(PressureChart)
ggplot(US_selectedTime_By_Pressure) +
aes(x = `Pressure(in)`, y = n) +
geom_line(size = 0.5, colour = "#0174AD") +
labs(
x = "Pressure(in)",
y = "Amount of accident",
title = "Line Chart of Accidents and Pressure"
) +
theme_linedraw() +
theme(
plot.title = element_text(size = 20L,
face = "bold",
hjust = 0.5),
axis.title.y = element_text(size = 16L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
) +
xlim(28, 31)
PressureChart <- ggplot(US_selectedTime_By_Pressure) +
aes(x = `Pressure(in)`, y = n) +
geom_line(size = 0.5, colour = "#0174AD") +
labs(
x = "Pressure(in)",
y = "Amount of accident",
title = "Line Chart of Accidents and Pressure"
) +
theme_linedraw() +
theme(
plot.title = element_text(size = 20L,
face = "bold",
hjust = 0.5),
axis.title.y = element_text(size = 16L,
face = "bold"),
axis.title.x = element_text(size = 16L,
face = "bold")
) +
xlim(28, 31)
View(US_selectedTime_By_Temperature)
esquisse:::esquisser()
library(shiny); runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
View(US_Accidents_Dec21)
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
Maryland_CandV <- read_csv("Maryland_AccidentsAndViolation.csv")
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(packcircles)
library(viridis)
library(shiny)
library(leaflet)
library(stringr)
library(lubridate)
Maryland_CandV <- read_csv("Maryland_AccidentsAndViolation.csv")
US_Accidents_Dec21 <-
read_csv("US_Accidient_Updated.csv")
View(US_Accidient_UpdatedTime)
US_Accidient_UpdatedTime <-
US_Accidents_Dec21 %>% mutate(Start_Time_Year = year(Start_Time)) %>%
mutate(Start_Time_Month = month(Start_Time)) %>% mutate(Start_Time_Day = day(Start_Time))
runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
setwd("D:/All course documents/S2 2022/FIT5147/Final_DVP")
library(shiny); runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
NewDataCandV <-
within(Maryland_CandV, DateANDTimePart1[is.na(DateANDTimePart1)] <-
DateANDTimePart2[is.na(DateANDTimePart1)]) %>%
select(TypeOfEvent, DateANDTimePart1, Latitude, Longitude) %>% mutate(Year = year(DateANDTimePart1)) %>% mutate(Month = month(DateANDTimePart1)) %>%
mutate(Day = day(DateANDTimePart1)) %>% mutate(Hour = hour(DateANDTimePart1))
#=================================================================================
# Student Name: Yaoxing Chen
# Student ID: 32664443
#
# Tip:
#   There is a lot of data in the database,
#   and loading will consume a lot of time.
#   Please wait a moment,thanks for your patience.
#================================================================================
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(shiny)
library(stringr)
library(lubridate)
library(shinythemes)
library(shinycustomloader)
library(shinydashboard)
Maryland_CandV <- read_csv("Maryland_AccidentsAndViolation.csv")
US_Accidents_Dec21 <-
read_csv("US_Accidient_Updated.csv")
US_Accidient_UpdatedTime <-
US_Accidents_Dec21 %>% mutate(Start_Time_Year = year(Start_Time)) %>%
mutate(Start_Time_Month = month(Start_Time)) %>% mutate(Start_Time_Day = day(Start_Time))
MonthCollecttion <-
unique(US_Accidient_UpdatedTime$Start_Time_Month)
YearCollecttion <- unique(US_Accidient_UpdatedTime$Start_Time_Year)
NewDataCandV <-
within(Maryland_CandV, DateANDTimePart1[is.na(DateANDTimePart1)] <-
DateANDTimePart2[is.na(DateANDTimePart1)]) %>%
select(TypeOfEvent, DateANDTimePart1, Latitude, Longitude) %>% mutate(Year = year(DateANDTimePart1)) %>% mutate(Month = month(DateANDTimePart1)) %>%
mutate(Day = day(DateANDTimePart1)) %>% mutate(Hour = hour(DateANDTimePart1))
MonthCollecttionMaryland <- unique(NewDataCandV$Month)
YearCollecttionMaryland <- unique(NewDataCandV$Year)
View(NewDataCandV)
esquisse:::esquisser()
View(NewDataCandV)
NewDataCandVlocation <- NewDataCandV %>% select(TypeOfEvent, Latitude,Longitude) %>% count("TotalEventAmount")
View(NewDataCandVlocation)
NewDataCandVlocation <- NewDataCandV %>% select(TypeOfEvent, Latitude,Longitude) %>% group_by(TypeOfEvent, Latitude,Longitude) %>% count("TotalEventAmount")
View(NewDataCandVlocation)
View(NewDataCandVlocation)
esquisse:::esquisser()
runApp('D:/All course documents/S2 2022/FIT5147/Assessments/PE2/PE2_Rstudio.R')
NewDataCandV %>% select(TypeOfEvent, Latitude,Longitude) %>% group_by(TypeOfEvent, Latitude,Longitude) %>% count("TotalEventAmount") %>%
leaflet() %>%
addTiles() %>%
#Use longitutde and latitude to set the position of the circle and then set the size of the circle.
addCircles(lng = ~Longitude, lat = ~Latitude,
radius = ~ TotalEventAmount*3)
library(ggplot2)
library(plotly)
library(dplyr)
library(readr)
library(hrbrthemes)
library(tidyverse)
library(shiny)
library(stringr)
library(lubridate)
library(shinythemes)
library(shinycustomloader)
library(shinydashboard)
library(leaflet)
NewDataCandVlocation %>%
leaflet() %>%
addTiles() %>%
#Use longitutde and latitude to set the position of the circle and then set the size of the circle.
addCircles(lng = ~Longitude, lat = ~Latitude,
radius = ~ TotalEventAmount*3)
NewDataCandVlocation %>%
leaflet() %>%
addTiles() %>%
#Use longitutde and latitude to set the position of the circle and then set the size of the circle.
addCircles(lng = ~Longitude, lat = ~Latitude,
radius = ~ n*3)
View(NewDataCandVlocation)
esquisse:::esquisser()
NewDataCandVlocation1 <- NewDataCandVlocation[1:37795,]
View(NewDataCandVlocation1)
esquisse:::esquisser()
NewDataCandVlocation1 <- NewDataCandVlocation[1:151180,]
View(NewDataCandVlocation1)
esquisse:::esquisser()
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
setwd("D:/All course documents/S2 2022/FIT5147/Final_DVP")
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
runApp('DVP_US_Accidient.R')
library(shiny); runApp('DVP_US_Accidient.R')
